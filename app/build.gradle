/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/8.0.2/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'org.springframework.boot' version '3.2.2'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'application'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    implementation group: 'org.springframework', name: 'spring-context', version: '6.1.3'
    implementation group: 'org.springframework', name: 'spring-web', version: '6.1.3'
    implementation group: 'javax.annotation', name: 'javax.annotation-api', version: '1.3.2'
    implementation group: 'org.springframework.boot', name: 'spring-boot-autoconfigure', version: '2.7.4'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter', version: '2.7.4'
    implementation group: 'org.postgresql', name: 'postgresql', version: '42.7.3'
    testImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: '2.7.4'
    implementation project(':animals-config-starter')


    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.1'
    testImplementation 'org.mockito:mockito-junit-jupiter:3.12.4'
}

application {
    // Define the main class for the application.
    mainClass = 'hw3.service.Main'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

jar {
    manifest {
        attributes(
                'Main-Class': "hw3.service.Main"
        )
    }
}

bootJar {
    enabled = true
}
